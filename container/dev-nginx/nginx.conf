# プロキシ先の指定
# Nginxが受け取ったリクエストをバックエンドのpumaに送信
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  include /etc/nginx/conf.d/*.conf;

  proxy_buffer_size 128k;
  proxy_buffers 4 256k;
  proxy_busy_buffers_size 256k;
  charset UTF-8; # TODO: 次回本番デプロイ時に/containers/prod-nginx/nginx.confに反映
  server_tokens off;
  
  upstream backend {
    # ソケット通信したいのでpuma.sockを指定
    server unix:///backend/tmp/sockets/puma.sock;
  }

  server {
    listen 80;
    # ドメインもしくはIPを指定
    server_name localhost;

    access_log /var/log/nginx/access.log;

    # ドキュメントルートの指定
    client_max_body_size 100m;
    # errorページはRails.root/public内の静的htmlを使用する
    error_page 403 404            /404.html;
    error_page 500 502 503 504 505 /500.html; # TODO: 次回本番デプロイ時に/containers/prod-nginx/nginx.confに反映
    try_files  $uri/index.html $uri @backend;
    keepalive_timeout 5;

    # リバースプロキシ関連の設定
    location /api  {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://backend;
    }

    location /graphql  {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://backend;
    }

    location /_next/webpack-hmr {
      proxy_pass http://frontend:3000/_next/webpack-hmr;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /  {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://frontend:3000;
    }
  }
}

